prometheus:
  server:
    persistentVolume:
      enabled: true
      size: 10Gi
    retention: "7d"
    # Keep a single global block here
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

  serverFiles:
    prometheus.yml:
      # Removed duplicate global; only keep the one from above or merge here
      scrape_configs:
        - job_name: 'istio-mesh'
          kubernetes_sd_configs:
            - role: endpoints
              namespaces:
                names:
                  - istio-system
                  - crawlers
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: istio-proxy;http-monitoring

        - job_name: 'envoy-stats'
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                  - crawlers
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_container_name, __meta_kubernetes_pod_annotationpresent_prometheus_io_scrape]
              action: keep
              regex: istio-proxy;true
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name

grafana:
  adminPassword: admin
  service:
    type: ClusterIP
    port: 80

  persistence:
    enabled: true
    size: 5Gi

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://monitoring-stack-prometheus-server:80
          access: proxy
          isDefault: true

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default

  dashboards:
    default:
      proxy-usage:
        json: |
          {
            "dashboard": {
              "id": null,
              "title": "Proxy Usage Dashboard",
              "tags": ["proxy", "crawler"],
              "timezone": "browser",
              "panels": [
                {
                  "id": 1,
                  "title": "Requests by Proxy Vendor",
                  "type": "stat",
                  "targets": [
                    {
                      "expr": "sum by (proxy_vendor) (rate(istio_requests_total{source_app=\"crawler\"}[5m]))",
                      "legendFormat": "{{proxy_vendor}}"
                    }
                  ],
                  "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
                },
                {
                  "id": 2,
                  "title": "Bandwidth Usage (Outbound)",
                  "type": "graph",
                  "targets": [
                    {
                      "expr": "sum by (proxy_vendor) (rate(istio_request_bytes_sum{source_app=\"crawler\"}[5m]))",
                      "legendFormat": "{{proxy_vendor}} - Sent"
                    }
                  ],
                  "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
                },
                {
                  "id": 3,
                  "title": "Top Destinations",
                  "type": "table",
                  "targets": [
                    {
                      "expr": "topk(10, sum by (destination_service_name) (rate(istio_requests_total{source_app=\"crawler\"}[5m])))",
                      "format": "table"
                    }
                  ],
                  "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
                }
              ],
              "time": {"from": "now-1h", "to": "now"},
              "refresh": "30s"
            }
          }
